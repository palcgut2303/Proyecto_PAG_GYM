@inject SweetAlertService Swal
@inject IClassService classService;

@page "/listclassadmin"
@using CurrieTechnologies.Razor.SweetAlert2
@attribute [Authorize(Roles = "Instructor")]


<h3>Clases Disponibles</h3>

<a class="btn btn-success btn-sm mb-3" href="createdclasses">Nueva Clase</a>
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>Instructor</th>
                <th>Tipo</th>
                <th>Fecha</th>
                <th>Horario</th>
                <th>Capacidad</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (resultClass.ListClass == null)
            {
                @if (resultClass.Error != null)
                {
                    <tr>
                        <td colspan="5" align="center">
                            @resultClass.Error
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td colspan="5" align="center">
                            <img style="width: 50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
                        </td>
                    </tr>
                }

            }
            else
            {
                @foreach (var classes in listClass)
                {
                    <tr>
                        <td>@classes.GymInstructorName</td>
                        <td>@classes.ClassTypeName</td>
                        <td>@GetDate(classes.Schedule)</td>
                        <td>@classes.Schedule.TimeOfDay - @AddMinutes(classes.Schedule, 60)</td>
                        <td>@classes.Capacity</td>

                        <td>
                            <a class="btn btn-primary btn-sm" href="createdclasses/@classes.Id">
                                <i class="bi bi-pencil-fill"></i>
                            </a>
                            <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => Eliminar(classes.Id))">
                                <i class="bi bi-trash-fill"></i>
                            </button>
                        </td>
                    </tr>
                }
            }

        </tbody>

    </table>
</div>



@code {
    ClassListResult resultClass = new ClassListResult();
    IEnumerable<ClassDTO> listClass = null;
    

    protected override async Task OnInitializedAsync()
    {
        resultClass.ListClass = null;
        resultClass = await classService.ClassesList();
        listClass = resultClass.ListClass!;
    }

    private async Task Eliminar(int id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar Clase",
                Text = "Deseas eliminar la clase?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
            });

        if (resultado.IsConfirmed)
        {
            var eliminado = await classService.DeleteClass(id); 
            if (eliminado)
            {
                var isDelete = await Swal.FireAsync(new SweetAlertOptions
                    {
                        Title = "Clase Eliminada",
                        Text = $"Se ha eliminado correctamente la clase con id: {id}",
                        Icon = SweetAlertIcon.Success,
                    });

                resultClass = await classService.ClassesList();
                listClass = resultClass.ListClass!;
            }
            else
            {
                var error = await Swal.FireAsync(new SweetAlertOptions
                    {
                        Title = "Error",
                        Text = "Error al eliminar la clase",
                        Icon = SweetAlertIcon.Error,
                    });
            }
        }
    }

    //Metodo que me añada una hora a la hora de la clase
    private TimeSpan AddMinutes(DateTime time, int minutes)
    {
        var addHour = time.AddMinutes(minutes);
        return addHour.TimeOfDay;
    }

    //Metodo que me devuelva la fecha de la clase
    private string GetDate(DateTime date)
    {
        
        return date.ToString("dd-MM-yyyy");
    }

}
