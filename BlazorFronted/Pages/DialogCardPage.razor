@page "/dialogcard/{UserID:int}"

@inject IGymMemberService gymMemberService
@inject IClassService classService
@inject Radzen.DialogService dialogService
@inject NavigationManager NavigationManager

<style>


    .page-background-class {
        position: fixed; /* Fijar la posición para cubrir toda la pantalla */
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url('img/backgroungUser.jpg'); /* Ruta de la imagen de fondo */
        background-size: cover; /* Ajustar la imagen de fondo para cubrir toda la pantalla */
        background-repeat: no-repeat; /* Evitar que la imagen se repita */
        background-position: center; /* Posición de la imagen de fondo */
        z-index: -1; /* Colocar la imagen de fondo detrás de los demás elementos */
    }

    .overlay {
        position: fixed; /* Fijar la posición para cubrir toda la pantalla */
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8); /* Color de fondo con opacidad */
        z-index: -1; /* Colocar la imagen de fondo detrás de los demás elementos */
    }

</style>
<div class="page-background-class"></div>
<div class="overlay"></div>

<div class="m-3">
    <RadzenStack Gap="1rem" Orientation="Radzen.Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" Style="height: 100%;">
        <RadzenStack>
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="6" Class="rz-p-4 rz-border-radius-1 bg-white" Style="border: var(--rz-grid-cell-border)">
                    <RadzenText TextStyle="TextStyle.Subtitle1">Contacto</RadzenText>
                    <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="AlignItems.Center">

                        <RadzenStack Gap="0" Class="rz-text-truncate">
                            <RadzenText TextStyle="TextStyle.Overline" Class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Nombre</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" Class="rz-text-truncate"><b>@model.FullName</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" Class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Email</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" Class="rz-text-truncate"><b>@model.emailMember</b></RadzenText>
                        </RadzenStack>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="6" Class="rz-p-4 rz-border-radius-1 bg-white" Style="border: var(--rz-grid-cell-border)">
                    <RadzenText TextStyle="TextStyle.Subtitle1">Informacion de la suscripción</RadzenText>
                    <RadzenStack Gap="0" Class="rz-text-truncate">
                        <RadzenText TextStyle="TextStyle.Overline" Class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Fecha de Inscripción</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" Class="rz-text-truncate"><b>@GetDate(model.JoinDate)</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" Class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Fecha de Salida</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" Class="rz-text-truncate"><b>@GetDate(model.EndDate)</b></RadzenText>
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>

            <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">
                <RadzenText TextStyle="TextStyle.Subtitle1" Class="rz-m-0 text-white">Reservas de @model.FullName</RadzenText>
            </RadzenStack>
            <RadzenDataGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Data="@(listClassUser)" ColumnWidth="200px" Density="Density.Compact" AllowAlternatingRows="false">
                <Columns>
                    <RadzenDataGridColumn Property="GymInstructorName" Title="Instructor" />
                    <RadzenDataGridColumn Property="ClassTypeName" Title="Tipo de Clase" />
                    <RadzenDataGridColumn Property="Schedule" Title="Fecha" />
                </Columns>
            </RadzenDataGrid>
        </RadzenStack>
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
            @*             <RadzenButton Click="@((args) => dialogService.Close(true))" Variant="Variant.Flat" Text="Cerrar" Style="width: 120px" />*@
            <RadzenButton Click="@Cerrar" Variant="Variant.Flat" Text="Volver" Style="width: 120px" />
         </RadzenStack>
    </RadzenStack>
</div>

@code {
    [Parameter] public int UserID { get; set; }


    GymMemberDTO model = new GymMemberDTO();
    List<ClassDTO> listClassUser = new List<ClassDTO>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var result = await gymMemberService.GymMemberById(UserID);

        model = result.GymMemberDTO!;
         listClassUser = await classService.GetClassesByGymMember(model.emailMember);
    }
    // <RadzenImage Path="@order.Employee?.Photo" Style="width: 80px; height: 80px; border-radius: 50%" />

    private void Cerrar()
    {
        NavigationManager.NavigateTo("/useradminmanage");
    }

    private string GetDate(DateTime? date)
    {

        return date?.ToString("dd-MM-yyyy");
    }
}
