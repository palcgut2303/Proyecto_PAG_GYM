@using BlazorFronted.Interfaces
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@inject IAuthService AuthService
@inject IGymMemberService GymMemberService

<style>
    .logo {
        margin-left: 30px;
        line-height: 80px;
        font-size: 28px;
        font-weight: 600;
        text-transform: uppercase;
        float: left;
    }

    a {
        font-family: "Poppins", sans-serif;
    }

    .container2 {
        text-align: right;
    }

    .logo-img {
        width: 60px; /* Ajusta el ancho según tus necesidades */
        height: auto; /* Mantiene la proporción de la imagen */
    }

    .navbar {
        background: linear-gradient(135deg, #161315 70%, #CDFF04 30%);
    }

    .nav-link {
        color: white;
    }

    .navbar-light .navbar-nav .nav-link {
        color: rgb(255 255 255);
    }

</style>

<nav class="navbar navbar-expand-lg navbar-light bg-light">

    <a class="navbar-brand logo" href="#">
        <img src="/img/img-mgp/logoAzuladoMGP-removebg-preview.png" alt="LOGO MGP" class="logo-img">
    </a>

    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            @* <li class="nav-item active">
            <a class="nav-link" href="#">Inicio <span class="sr-only">(current)</span></a>
            </li> *@
            <AuthorizeView Roles="Instructor">
                <Authorized>

                    <li class="nav-item"><a class="nav-link text-white" href="listclassadmin">Clases</a></li>
                    <li class="nav-item"><a class="nav-link text-white" href="typeofclasspage">Tipos de Clases</a></li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i style="color: white" class="bi bi-person-circle"></i>
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="useradminmanage">Gestionar Usuarios</a></li>
                            <li><a class="dropdown-item" href="dialogcardAdmin">Mi Perfil</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="logout">Cerrar Sesión</a></li>
                        </ul>
                    </li>
                </Authorized>
            </AuthorizeView>

            <AuthorizeView Roles="User">

                <Authorized>
                    <li class="nav-item"><a class="nav-link text-white" href="#features">Acerca de</a></li>
                    <li class="nav-item"><a class="nav-link text-white" href="privacypolicy/#contact">Contacto</a></li>
                    <li class="nav-item"><a class="nav-link text-white" href="reservation">Reservar</a></li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i style="color: white" class="bi bi-person-circle"></i>
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item " href="dialogcardUser">Mi Perfil</a></li>
                            <li><hr class="dropdown-divider "></li>
                            <li><a class="dropdown-item " href="logout">Cerrar Sesión</a></li>
                        </ul>
                    </li>

                </Authorized>
            </AuthorizeView>
            <AuthorizeView>

                <NotAuthorized>
                    <li class="nav-item"><a class="nav-link text-white" href="login">Iniciar Sesion</a></li>

                </NotAuthorized>
            </AuthorizeView>
        </ul>
    </div>


</nav>


@code {
    private string userRole;
    string emailUserIdentificate;
    int idUser;
    protected override async Task OnInitializedAsync()
    {
        userRole = await AuthService.GetRole();
        await SaveRoleInLocalStorage(userRole);
        emailUserIdentificate = await AuthService.GetEmail();

        @if (userRole == "User")
        {
            var result = await GymMemberService.GymMemberByEmail(emailUserIdentificate);

            if (result != null)
            {
                idUser = result.GymMemberDTO!.Id;
            }
        }

    }

    private async Task SaveRoleInLocalStorage(string rol)
    {
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "Role", rol);
    }
}
