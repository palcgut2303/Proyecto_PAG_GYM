@using GYM_DTOs.EntityDTO
@using Microsoft.AspNetCore.Authorization
@inject IJSRuntime JSRuntime

@page "/createdclasses"
@attribute [Authorize(Roles = "Instructor")]
<AuthorizeView>
    <Authorized>

        <h3>Crear Clase</h3>

        <EditForm Model="@clase" OnValidSubmit="SubmitForm">
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText class="form-control" id="name" @bind-Value="@clase.Name" />
                <ValidationMessage For="@(() => clase.Name)" />
            </div>

            <div class="mb-3">
                <label for="duration" class="form-label">Duration (minutes):</label>
                <InputNumber class="form-control" id="duration" @bind-Value="@clase.DurationInMinutes" />
                <ValidationMessage For="@(() => clase.DurationInMinutes)" />
            </div>

            <div class="mb-3">
                <label for="schedule" class="form-label">Schedule:</label>
                <InputDate class="form-control" id="schedule" @bind-Value="@clase.Schedule" />
                <ValidationMessage For="@(() => clase.Schedule)" />
            </div>

            <div class="mb-3">
                <label for="classTypeId" class="form-label">Class Type ID:</label>
                <InputNumber class="form-control" id="classTypeId" @bind-Value="@clase.ClassTypeId" />
                <ValidationMessage For="@(() => clase.ClassTypeId)" />
            </div>

            <div class="mb-3">
                <label for="gymInstructorId" class="form-label">Gym Instructor ID:</label>
                <InputNumber class="form-control" id="gymInstructorId" @bind-Value="@clase.GymInstructorId" />
                <ValidationMessage For="@(() => clase.GymInstructorId)" />
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>







    </Authorized>
    <NotAuthorized>
        <h1>¡No tienes permisos para acceder a esta página!</h1>
    </NotAuthorized>
</AuthorizeView>
@code {
    private ClassDTO clase = new ClassDTO();

    private void SubmitForm()
    {
        // Aquí puedes manejar la lógica para enviar el objeto 'clase' a donde sea necesario.
        // Por ejemplo, puedes enviarlo a una API, a una base de datos, etc.
        // También puedes realizar validaciones antes de enviar el objeto.
        // Una vez que se ha enviado el objeto, puedes restablecer el objeto 'clase' para limpiar el formulario.
        clase = new ClassDTO();
    }
}
