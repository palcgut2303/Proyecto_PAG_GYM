@page "/clases"

@using GYM_DTOs;
@using CurrieTechnologies.Razor.SweetAlert2;
@using BlazorFronted.Services;
@using GYM_DTOs.EntityDTO
@inject SweetAlertService Swal
@inject IClassService classService;

<PageTitle>Clases</PageTitle>


<style>
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    th {
        background-color: #f2f2f2;
    }

    tr:hover {
        background-color: #f5f5f5;
    }

    .contenido-clases {
        margin-top: 2%
    }
</style>

<div class="container mb-5 contenido-clases border border-primary rounded">
    <div>
        <h3 class="align-items-center">Clases</h3>
    </div>

    <EditForm Model="classDTO">
        <DataAnnotationsValidator />
        <div class="mt-3">
            <InputDate class="form-control" @bind-Value="classDTO.Schedule" ></InputDate>
            <ValidationMessage For="@(() => classDTO.Schedule)"></ValidationMessage>
            <button class="btn btn-primary mt-3 mb-3" @onclick="mostrarDia">Obtener Clases</button>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        Nombre
                    </th>
                    <th>
                        Horario
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (clasesPorDia is not null)
                {
                    @if (clasesEnEseDia is not null)
                    {
                        @foreach (var clase in clasesEnEseDia)
                        {
                            if (clase.Schedule.Date == classDTO.Schedule.Date)
                            {
                                <tr>
                                    <td>@clase.Name</td>
                                    <td>@clase.Schedule</td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td>No hay clases disponibles</td>
                                </tr>
                            }
                            

                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="2" align="center">
                                <img style="width:50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="2" align="center">
                            <img style="width:50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
                        </td>
                    </tr>
                }
            </tbody>

        </table>

    </EditForm>




</div>





@code {

    Dictionary<DateTime, List<ClassDTO>> clasesPorDia;
    List<DateTime>? diasMostrados;
    DateTime diaActual = DateTime.Now.Date;
    List<ClassDTO> clasesEnEseDia = new List<ClassDTO>();
    ClassDTO classDTO = new ClassDTO();

    protected override async Task OnInitializedAsync()
    {
        clasesPorDia = await classService.GetClassesByDayOfTheWeek();
        diasMostrados = clasesPorDia.Keys.ToList();
        classDTO.Schedule = DateTime.Now.Date;

        foreach (var item in clasesPorDia)
        {
            if (item.Key.Date == classDTO.Schedule.Date)
            {
                clasesEnEseDia = item.Value;
            }
        }
    }

    private void mostrarDia()
    {

        foreach (var item in clasesPorDia)
        {
            if (item.Key.Date == classDTO.Schedule.Date)
            {
                clasesEnEseDia = item.Value;
            }
        }
    }


    // void IrAlDiaAnterior()
    // {
    //     diaActual = diaActual.AddDays(-1);

    //     foreach (var item in clasesPorDia)
    //     {
    //         if (item.Key.Date == classDTO.Schedule.Date)
    //         {
    //             clasesEnEseDia = item.Value;
    //         }
    //     }

    // }


}
