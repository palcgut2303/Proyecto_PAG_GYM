@page "/register"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

@inject IAuthService AuthService

@inject NavigationManager NavigationManager

<style>
    .page-background-class {
        position: fixed; /* Fijar la posición para cubrir toda la pantalla */
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url('img/backgroungUser.jpg'); /* Ruta de la imagen de fondo */
        background-size: cover; /* Ajustar la imagen de fondo para cubrir toda la pantalla */
        background-repeat: no-repeat; /* Evitar que la imagen se repita */
        background-position: center; /* Posición de la imagen de fondo */
        z-index: -1; /* Colocar la imagen de fondo detrás de los demás elementos */
    }

    .overlay {
        position: fixed; /* Fijar la posición para cubrir toda la pantalla */
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8); /* Color de fondo con opacidad */
        z-index: -1; /* Colocar la imagen de fondo detrás de los demás elementos */
    }

    .link-button {
        background: none;
        color: blue;
        border: none;
        padding: 0;
        font: inherit;
        cursor: pointer;
        text-decoration: underline;
    }

</style>

<div class="page-background-class"></div>
<div class="overlay"></div>

<section class="pt-3 pb-3">

    <div class="container h-80">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-lg-12 col-xl-11">
                <div class="card text-black" style="border-radius: 25px;">
                    <div class="card-body p-md-5">
                        <div class="row justify-content-center">
                            <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Registrate</p>
                                <EditForm Model="RegisterModel">
                                    <DataAnnotationsValidator />
                                        @*<ValidationSummary />*@

                                    @if (ShowErrors)
                                    {
                                        <div class="alert alert-danger" role="alert">
                                            @foreach (var error in Errors!)
                                            {
                                                <p>@error</p>
                                            }
                                        </div>
                                    }

                                    @if (ShowConfirm)
                                    {
                                        <div class="alert alert-success" role="alert">
                                            @foreach (var message in Confirm!)
                                            {
                                                <p>@message</p>
                                            }
                                        </div>
                                    }

                                    @if (!loadCodePage)
                                    {
                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="bi bi-person-fill me-3"></i>
                                            
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                                <label class="form-label" for="form3Example1c">Nombre Usuario</label>
                                                <InputText Id="username" class="form-control" @bind-Value="RegisterModel.Username" />
                                                <ValidationMessage For="@(() => RegisterModel.Username)" />
                                                
                                            </div>
                                        </div>

                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="bi bi-person-fill me-3"></i>
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                                <label class="form-label" for="form3Example1c">Nombre Completo</label>
                                                <InputText Id="fullname" class="form-control" @bind-Value="RegisterModel.FullName" />
                                                <ValidationMessage For="@(() => RegisterModel.FullName)" />
                                                
                                            </div>
                                        </div>


                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="bi bi-envelope-at-fill me-3"></i>
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                                <label class="form-label" for="form3Example3c">Correo Electrónico</label>
                                                <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" />
                                                <ValidationMessage For="@(() => RegisterModel.Email)" />
                                                
                                            </div>
                                        </div>

                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="bi bi-lock-fill me-3"></i>
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                                <label class="form-label" for="form3Example4c">Contraseña</label>
                                                <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" />
                                                <ValidationMessage For="@(() => RegisterModel.Password)" />
                                                
                                            </div>
                                        </div>
                                        <span><a href="login">¿Tienes una cuenta?, Inicia sesión aquí</a></span>

                                        <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4  mt-2">

                                            <button @onclick="enterCodeValidation" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-lg">Registrarse</button>
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Introduce tu código:</p>

                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="bi bi-person-fill me-3"></i>
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                                <InputText Id="code" class="form-control" @bind-Value="codeEmailUser" />
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                                            <button class="link-button" @onclick="enterCodeValidation">
                                                ¿No te ha llegado nuestro email?, Enviar otro código.
                                            </button>
                                        </div>
                                        <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4 ">
                                            
                                            <button @onclick="SubmitRegistration" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-lg">Confirmar</button>
                                        </div>
                                    }

                                </EditForm>
                            </div>
                            <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2 ">
                                
                                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp"
                                     class="img-fluid" alt="Sample image">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {

    private RegisterDTO RegisterModel = new RegisterDTO();
    private bool ShowErrors;
    private IEnumerable<string>? Errors;

    private bool ShowConfirm;
    private IEnumerable<string>? Confirm;

    private bool loadCodePage = false;
    private string codeEmailUser;
    private string codeEmailSend;

    private EditContext editContext;
    private ValidationMessageStore validationMessageStore;


    protected override void OnInitialized()
    {
        editContext = new EditContext(RegisterModel);
        validationMessageStore = new ValidationMessageStore(editContext);
    }

    private async Task enterCodeValidation()
    {
        if (RegisterModel.Email != null && RegisterModel.FullName != null && RegisterModel.Password != null && RegisterModel.Username != null)
        {
            if(!ValidateModel())
            {
                Errors = new List<string> { "Escribe el formulario correctamente" };
                ShowErrors = true;
                return;
            }
            else
            {
                loadCodePage = true;
                Errors = null;
                ShowErrors = false;

                codeEmailSend = AuthService.RandomString();

                var sendEmailRequest = new SendEmailRequest(RegisterModel.Email, "Código de validación en GYM PAG", "Tu código de validación es: " + codeEmailSend);


                var result = await AuthService.SendEmail(sendEmailRequest);



                if (!result.Correct)
                {
                    Errors = new List<string> { "Error al enviar el correo" };
                    ShowErrors = true;
                }
                else
                {
                    Errors = null;
                    ShowErrors = false;

                    Confirm = new List<string> { "Se ha enviado un correo con el código de validación" };
                    ShowConfirm = true;
                }
            }
        }
        else
        {
            ShowErrors = true;
            Errors = new List<string> { "Todos los campos son requeridos" };
        }

    }
    
    private bool ValidateModel()
    {
        var validationResults = new List<ValidationResult>();
        var validationContext = new ValidationContext(RegisterModel);
        bool isValid = Validator.TryValidateObject(RegisterModel, validationContext, validationResults, true);

        validationMessageStore.Clear();

        foreach (var validationResult in validationResults)
        {
            foreach (var memberName in validationResult.MemberNames)
            {
                validationMessageStore.Add(new FieldIdentifier(RegisterModel, memberName), validationResult.ErrorMessage);
            }
        }

        editContext.NotifyValidationStateChanged();
        return isValid;
    }

    private async Task SubmitRegistration()
    {
        ShowErrors = false;

        if (codeEmailUser != codeEmailSend)
        {
            Errors = new List<string> { "El código ingresado no es correcto" };
            ShowErrors = true;
            return;
        }
        else
        {
            RegisterModel.EmailCode = codeEmailUser;
            var result = await AuthService.Register(RegisterModel);

            if (result.Successful)
            {
                var sendEmailRequest = new SendEmailRequest(RegisterModel.Email, "Confirmacion de registro en GYM PAG",
                                            "¡BIENVENIDO A GYM PAG, TE HAS REGISTRADO CORRECTAMENTE!\n -Empieza a reservar clases en el apartado de 'RESERVAR', y disfruta de nuestras magnificas clases");


                var resultSendEmail = await AuthService.SendEmail(sendEmailRequest);



                if (!resultSendEmail.Correct)
                {
                    Errors = new List<string> { "Error al enviar el correo" };
                    ShowErrors = true;
                }
                else
                {
                    NavigationManager.NavigateTo("/login");
                }


            }
            else
            {
                Errors = result.Errors;
                ShowErrors = true;
            }
        }


    }

}