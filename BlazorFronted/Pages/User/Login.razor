 @page "/login"
 @using GYM_DTOs.AccountDTO
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<section class="vh-100" style="background-color: #eee;">
    <div class="container h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-lg-12 col-xl-11">
                <div class="card text-black" style="border-radius: 25px;">
                    <div class="card-body p-md-5">
                        <div class="row justify-content-center">
                            <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Log In</p>
                                <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />

                                    @if (ShowErrors)
                                    {
                                        <div class="alert alert-danger" role="alert">
                                            <p>@Error</p>
                                        </div>
                                    }

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="bi bi-envelope-at-fill me-3"></i>
                                        <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                            <InputText Id="email" Class="form-control" @bind-Value="loginModel.Email" />
                                            <ValidationMessage For="@(() => loginModel.Email)" />
                                            <label class="form-label" for="form3Example3c">Email</label>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="bi bi-lock-fill me-3"></i>
                                        <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                            <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                                            <ValidationMessage For="@(() => loginModel.Password)" />
                                            <label class="form-label" for="form3Example4c">Password</label>
                                        </div>
                                    </div>
                                    <span><a href="register">¿No tienes una cuenta?, Registrate aquí</a></span>

                                    <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">

                                        <button type="submit" class="btn btn-primary">Iniciar Sesion</button>
                                    </div>


                                </EditForm>
                            </div>
                            <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">

                                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp"
                                     class="img-fluid" alt="Sample image">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {

    private LoginDTO loginModel = new LoginDTO();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            
            NavigationManager.NavigateTo("/");
            // await JSRuntime.InvokeVoidAsync("location.reload");
        }
        else
        {
            Console.WriteLine(result.Error);
            Error = result.Error!;
            ShowErrors = true;
        }
    }
} 